// Generated by the protocol buffer compiler.  DO NOT EDIT!
// clang-format off
// source: BDASignalRequestModel.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
//  Copyright 2023 Beijing Ocean Engine Network Technology Co., Ltd. 
//  SPDX-License-Identifier: MIT

#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BDASignalHeader;
@class BDASignalUser;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - BDASignalBdasignalRequestModelRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface BDASignalBdasignalRequestModelRoot : GPBRootObject
@end

#pragma mark - BDASignalEvent

typedef GPB_ENUM(BDASignalEvent_FieldNumber) {
  BDASignalEvent_FieldNumber_User = 1,
  BDASignalEvent_FieldNumber_Header = 2,
  BDASignalEvent_FieldNumber_EventName = 3,
  BDASignalEvent_FieldNumber_Params = 4,
  BDASignalEvent_FieldNumber_LocalTime = 5,
  BDASignalEvent_FieldNumber_ServerTime = 6,
};

GPB_FINAL @interface BDASignalEvent : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BDASignalUser *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

@property(nonatomic, readwrite, strong, null_resettable) BDASignalHeader *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/** 事件名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *eventName;
/** Test to see if @c eventName has been set. */
@property(nonatomic, readwrite) BOOL hasEventName;

/** 事件属性,单层json map,需要dump成字符串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *params;
/** Test to see if @c params has been set. */
@property(nonatomic, readwrite) BOOL hasParams;

/** 事件发生时间戳(秒) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *localTime;
/** Test to see if @c localTime has been set. */
@property(nonatomic, readwrite) BOOL hasLocalTime;

/** 到达服务器时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverTime;
/** Test to see if @c serverTime has been set. */
@property(nonatomic, readwrite) BOOL hasServerTime;

@end

#pragma mark - BDASignalUser

typedef GPB_ENUM(BDASignalUser_FieldNumber) {
  BDASignalUser_FieldNumber_UserUniqueId = 1,
  BDASignalUser_FieldNumber_UserId = 2,
};

GPB_FINAL @interface BDASignalUser : GPBMessage

/** 用户唯一id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userUniqueId;
/** Test to see if @c userUniqueId has been set. */
@property(nonatomic, readwrite) BOOL hasUserUniqueId;

/** 用户id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;
/** Test to see if @c userId has been set. */
@property(nonatomic, readwrite) BOOL hasUserId;

@end

#pragma mark - BDASignalHeader

typedef GPB_ENUM(BDASignalHeader_FieldNumber) {
  BDASignalHeader_FieldNumber_AppPackage = 1,
  BDASignalHeader_FieldNumber_AppVersion = 2,
  BDASignalHeader_FieldNumber_DeviceName = 3,
  BDASignalHeader_FieldNumber_DeviceModel = 4,
  BDASignalHeader_FieldNumber_Model = 5,
  BDASignalHeader_FieldNumber_BootTimeSec = 6,
  BDASignalHeader_FieldNumber_SystemVersion = 7,
  BDASignalHeader_FieldNumber_Memory = 8,
  BDASignalHeader_FieldNumber_Disk = 9,
  BDASignalHeader_FieldNumber_DeviceMntId = 10,
  BDASignalHeader_FieldNumber_DeviceInitTime = 11,
  BDASignalHeader_FieldNumber_SysFileTime = 12,
  BDASignalHeader_FieldNumber_ClientTun = 13,
  BDASignalHeader_FieldNumber_ClientAnpi = 14,
  BDASignalHeader_FieldNumber_UserAgent = 15,
  BDASignalHeader_FieldNumber_Ipv4 = 16,
  BDASignalHeader_FieldNumber_Ipv6 = 17,
  BDASignalHeader_FieldNumber_ClickId = 18,
  BDASignalHeader_FieldNumber_Idfa = 19,
  BDASignalHeader_FieldNumber_Idfv = 20,
  BDASignalHeader_FieldNumber_SdkVersion = 21,
  BDASignalHeader_FieldNumber_Deeplink = 22,
};

GPB_FINAL @interface BDASignalHeader : GPBMessage

/** app包名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appPackage;
/** Test to see if @c appPackage has been set. */
@property(nonatomic, readwrite) BOOL hasAppPackage;

/** app版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appVersion;
/** Test to see if @c appVersion has been set. */
@property(nonatomic, readwrite) BOOL hasAppVersion;

/** 设备名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

/** 设备machine,机型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceModel;
/** Test to see if @c deviceModel has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceModel;

/** Hardware model */
@property(nonatomic, readwrite, copy, null_resettable) NSString *model;
/** Test to see if @c model has been set. */
@property(nonatomic, readwrite) BOOL hasModel;

/** 系统启动时间（秒） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bootTimeSec;
/** Test to see if @c bootTimeSec has been set. */
@property(nonatomic, readwrite) BOOL hasBootTimeSec;

/** 系统版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *systemVersion;
/** Test to see if @c systemVersion has been set. */
@property(nonatomic, readwrite) BOOL hasSystemVersion;

/** 物理内存大小 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *memory;
/** Test to see if @c memory has been set. */
@property(nonatomic, readwrite) BOOL hasMemory;

/** 硬盘大小 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *disk;
/** Test to see if @c disk has been set. */
@property(nonatomic, readwrite) BOOL hasDisk;

/** 挂载id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceMntId;
/** Test to see if @c deviceMntId has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceMntId;

/** 设备初始化时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceInitTime;
/** Test to see if @c deviceInitTime has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceInitTime;

/** 系统更新时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sysFileTime;
/** Test to see if @c sysFileTime has been set. */
@property(nonatomic, readwrite) BOOL hasSysFileTime;

/** tun */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientTun;
/** Test to see if @c clientTun has been set. */
@property(nonatomic, readwrite) BOOL hasClientTun;

/** anpi */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientAnpi;
/** Test to see if @c clientAnpi has been set. */
@property(nonatomic, readwrite) BOOL hasClientAnpi;

/** 系统webview user agent */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAgent;
/** Test to see if @c userAgent has been set. */
@property(nonatomic, readwrite) BOOL hasUserAgent;

/** ipv4 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ipv4;
/** Test to see if @c ipv4 has been set. */
@property(nonatomic, readwrite) BOOL hasIpv4;

/** ip */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ipv6;
/** Test to see if @c ipv6 has been set. */
@property(nonatomic, readwrite) BOOL hasIpv6;

@property(nonatomic, readwrite, copy, null_resettable) NSString *clickId;
/** Test to see if @c clickId has been set. */
@property(nonatomic, readwrite) BOOL hasClickId;

/** 广告主标识符 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *idfa;
/** Test to see if @c idfa has been set. */
@property(nonatomic, readwrite) BOOL hasIdfa;

/** 供应商标识符 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *idfv;
/** Test to see if @c idfv has been set. */
@property(nonatomic, readwrite) BOOL hasIdfv;

/** sdk版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sdkVersion;
/** Test to see if @c sdkVersion has been set. */
@property(nonatomic, readwrite) BOOL hasSdkVersion;

/** 调起链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deeplink;
/** Test to see if @c deeplink has been set. */
@property(nonatomic, readwrite) BOOL hasDeeplink;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
